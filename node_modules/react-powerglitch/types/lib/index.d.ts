import { PowerGlitchOptions, RecursivePartial } from 'powerglitch';
/**
 * Handle to control the glitch once useGlitch is called.
 */
export type GlitchHandle = {
    /**
     * Function to use as ref for the element to glitch.
     */
    ref: (node: HTMLElement | null) => void;
    /**
     * Glitch control to start the glitch animation.
     */
    startGlitch: () => void;
    /**
     * Glitch control to stop the glitch animation.
     */
    stopGlitch: () => void;
    /**
     * Change the glitch options.
     */
    setOptions: (options: RecursivePartial<PowerGlitchOptions>) => void;
};
/**
 * Hook to glitch one element.
 * @param userOptions Options given to PowerGlitch
 * @returns A glitch handle with glitch controls, a function to update the options and
 */
export declare function useGlitch(userOptions?: RecursivePartial<PowerGlitchOptions>): GlitchHandle;
